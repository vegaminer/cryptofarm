Some of bat scripts should be executed with so called elevated admin rights. Most of the times then you just double click on a bat file a cmd.exe session with non elevated rights starts and bat file executes without sufficient rights. There is a way to automate the elevating process from script itself, but it may trigger false alert message from Windows Defender (see [[https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Trojan%3aWin32%2fPowessere.G&threatid=2147725444|Trojan:Win32/Powessere.G]]). 

Consider the following code:
<code>
set "self=%~s0"

whoami.exe /groups | findstr.exe "S-1-16-12288" >nul 2>&1 || (
  mshta.exe "javascript: var shell=new ActiveXObject('shell.application'); shell.ShellExecute('%self:\=\\%','','','runas',1); close();"
  exit /b
)

echo I'm running in elevated environment!
</code>

Let's go through it part by part:

  1. ''set "self=%~s0"'' - assign to a variable with name 'self' the short (without spaces) file name of our script itself.
  2. ''whoami.exe /groups'' - Display group information for the user who is currently logged on to the local system (see official [[https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/whoami|whoami]] manual). whoami is a system program located in C:\Windows\System32
  3. ''| findstr.exe "S-1-16-12288" >nul 2>&1'' - search for [[https://support.microsoft.com/en-us/help/243330/well-known-security-identifiers-in-windows-operating-systems|well known S-1-16-12288]] group name in whoami output. findstr is a system program located in C:\Windows\System32
  4. ''|| (...)'' - if S-1-16-12288 was not found (findstr return false result) it means that our script is running in non elevated environment and expression in parentheses should be executed. Double pipes read as "logical or" operation. 
  5. ''mshta.exe'' - is a standard windows program located in C:\Windows\System32\ It is used for running MS proprietary [[https://en.wikipedia.org/wiki/HTML_Application|HTML applications]] (HTA for short). mshta is a system program located in C:\Windows\System32
  6. ''"javascript: . . ."'' - is a javascript code executed by mshta
  7. ''var shell=new ActiveXObject('shell.application');'' - create an instance of [[https://msdn.microsoft.com/en-us/library/windows/desktop/bb774094(v=vs.85).aspx|shell.application]] object
  8. ''shell.ShellExecute('%self:\=\\%','','','runas',1);'' - execute our script given by variable self (expression %self:\=\\% just replaces single slash with double slash since this is js code) with admin rights. See [[https://docs.microsoft.com/en-us/windows/desktop/shell/shell-shellexecute|ShellExecute documentation]] for more details.
  9. ''close();'' - just close mshta and exit
  10. ''exit /b'' - exit from non privileged part of our script
  11. ''echo I'm running in elevated environment!'' - self-explanatory statement
  
Well, why indeed Windows Defender think that this harmless code is a virus? It's because of the ShellExecute method call. There are known viruses/trojans which infect computers using exactly the same technique for getting into the elevated environment with admin rights.

After finishing the above text an idea came to my mind: Hey, let's try to fool Windows Defender by a simple trick - copy mstha.exe with a different name... And it turns out that this method works perfectly! So [[:windows:rigutils:antivirustest.bat|AntiVirusTest.bat]] was born. Get a copy of it and run from [[:windows:rigutils#cmd.exe|cmd.exe]] shell.

To my mind, such a Windows Defender bypass method is clearly a bug (not critical, but bug), feel free to submit it to [[https://www.microsoft.com/en-us/msrc/bounty|MS bug bounty program]] and share with me your reward 8-)

Seriously speaking, this trick may stop working in future. But luckily, Windows Defender has an exclusions list for trusted files and folders. If you ever got a message from Defender that mshta.exe pose a security risk to your system and block it from execution then you have to (re)enable it. See this [[https://www.windowscentral.com/how-exclude-files-and-folders-windows-defender-antivirus-scans|tutorial]] for more details FIXME add own detailed screenshots tutorial). After adding //mstha.exe// to the whitelits of Windows Defender you may once again test your setup with [[:windows:rigutils:antivirustest.bat|AntiVirusTest.bat]]